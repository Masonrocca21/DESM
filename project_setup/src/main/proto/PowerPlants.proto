// powerplant.proto
syntax = "proto3";
option java_package = "com.example.powerplants";
option java_multiple_files = true;

package PowerPlants;

service PlantService {
    // Chiamata da una pianta a un'altra per decidere se soddisfare una richiesta energetica
    rpc HandleEnergyRequest (EnergyRequest) returns (EnergyResponse);
    rpc SendElection (ElectionMessage) returns (Ack);
    rpc SendElected (ElectedMessage) returns (Ack);
}

message EnergyRequest {
    int32 requestId = 1;
    int32 requiredEnergy = 2;
    int32 senderId = 3;
}

message EnergyResponse {
    bool canHandle = 1;
    string message = 2;
    int32 pollution = 3;         // livello di inquinamento
    int32 availableEnergy = 4;   // energia disponibile
}

message Ack {
    string message = 1;
}

message ElectionMessage {
    int32 initiatorId = 1;
    int32 candidateId = 2;       // chi Ã¨ il migliore finora
    double candidateValue = 3;    // valore (es. inquinamento o energia disponibile)
}

message ElectedMessage {
    int32 winnerId = 1;
    double winnerValue = 2;
}
